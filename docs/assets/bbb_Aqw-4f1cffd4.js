import{aV as e,aK as ee,o as ae,c as le,b as J,f as H,m as h,bc as te,bl as ue,F as oe,a as U,l as ve,E as se}from"./index-df7e4a51.js";import{g as ne,i as ie}from"./index-c13506ae.js";import{R as re}from"./three.module-2fa5ea98.js";const ce={AgvEquipmentInfo:[{Key:" eServoRelayCheck",value:"举升伺服未上电"},{Key:" eEmgCheck",value:"急停按下"},{Key:" eIoMarkCheck",value:"未发现地标"},{Key:" eMagnetDevCheck",value:"左右磁导航偏差过大"},{Key:" eFindLifterError",value:"举升伺服故障"},{Key:" eFindCarrierError",value:"整体轴伺服报错"},{Key:" eLifterSyncError",value:"举升编码器同步错误"},{Key:" elifterCentreCheck",value:"同步开关错误"},{Key:" elifterPositionCheck",value:"位置开关校验高度错误"},{Key:" elifterPositionCheckHight",value:"高度校验位置开关错误"},{Key:" ePreLifterHeightCheck",value:"举升任务高度错误"},{Key:" eLifterTopNotSafe",value:"举升高度不安全"},{Key:" eSecondAxisCheckCargoStatus",value:"副轴货物状态异常"},{Key:" eFirstAxisCheckCargoStatus",value:"主轴货物状态异常"},{Key:" eSecondAxisCargoExist",value:"副轴货物存在"},{Key:" eFirstAxisCargoExist",value:"主轴货物存在"},{Key:" eSecondAxisCargoNotExist",value:"副轴货物不存在"},{Key:" eFirstAxisCargoNotExist",value:"主轴货物不存在"},{Key:" eLifterHeightCheckright",value:"举升位置不安全"},{Key:" resume",value:"复位设备伺服"},{Key:" LifterAutoGotoHeight",value:"举升运动中"},{Key:" FirstAxisCargoNotExist",value:"主轴送货完成后发现货物"},{Key:" SecondAxisCargoNotExist",value:"副轴送货完成后发现货物"},{Key:" FirstAxisCargoExist",value:"主轴取货完成后未发现货物"},{Key:" SecondAxisCargoExist",value:"副轴取货完成后未发现货物"},{Key:" LifterReset",value:"举升复位到0"},{Key:" CarrierAutoGotoHeight",value:"整体轴运动中"},{Key:" CameraCheck",value:"获得工作模式并检查是否超时"},{Key:" eStartModeErr",value:"开始工作模式错误"},{Key:" eEndModeErr",value:"结束工作模式错误"},{Key:" eStateErr",value:"3D相机工作状态错误"},{Key:" eGoodExistErr",value:"前方货架有货"},{Key:" LifterAxis_Up",value:"举升轴上限位检测"},{Key:" LifterAxis_Down",value:"举升轴下限位检测"},{Key:" eLifterServoErr",value:"举升伺服故障"},{Key:" TurnAxis_Up",value:"旋转轴限位检测"},{Key:" TurnAxis_Down",value:"旋转轴限位检测"},{Key:" TurnAxis_Gohome",value:"旋转轴校零"},{Key:" LifterAxis_Gohome",value:"举升轴校零"},{Key:" eEmgbtnPressed",value:"急停按下"},{Key:" CheckDeltaAng",value:"角度补偿检测"},{Key:" StartLoadTune",value:"开始载货调整"},{Key:" ClearDeltaAng",value:"清除角度补偿"},{Key:" CheckDeltaY",value:"Y轴补偿检测"},{Key:" ClearDeltaY",value:"清除Y轴补偿"},{Key:" EndTune",value:"结束载货"},{Key:" CheckDeltaX",value:"X轴补偿检测"},{Key:" AutoGotoTopExt",value:"举升轴到上限位"},{Key:" eNotfindtheTop",value:"举升轴找不到上限位"},{Key:" LifterHeightCheck",value:"举升轴高度检测"},{Key:" CargoCheck",value:"货物检测"},{Key:" eLoadCargoExistError",value:"货物不存在"},{Key:" UpdateGryoPos",value:"更新惯导位置"},{Key:" CargoExist",value:"货物存在"},{Key:" StartUnLoadTune",value:"开始卸载调整"},{Key:" HandleUnLoadCheck",value:"卸货检查"},{Key:" eRackAngleNotSafe",value:"转盘角度不安全"},{Key:" AutoGotoBottomExt",value:"举升轴到下限位"},{Key:" eLifterBottomNotSafe",value:"举升轴到底不安全"},{Key:" eUnLoadCargoExistError",value:"货物未卸载"},{Key:" StartSyncSpin",value:"开始同步旋转"},{Key:" eSpinDiffOverLimit",value:"自旋角度超限"},{Key:" eRackServoErr",value:"旋转伺服故障"},{Key:" HandleSyncSpin",value:"处理同步旋转"},{Key:" EndSyncSpin",value:"结束同步旋转"},{Key:" StartCameraCheck",value:"开始3D相机检测"},{Key:" SpinCheck",value:"旋转检测"},{Key:" Start",value:"自旋准备"},{Key:" RackRun",value:"开始自旋"},{Key:" End",value:"结束自旋"},{Key:" ClearNavDeltaAng",value:"清除导航补偿角度"},{Key:" eCanNotGetNavThita",value:"无法得到导航角度"},{Key:" eCanNotGetNavY",value:"无法得到导航角度"},{Key:" eCanNotGetNavX",value:"无法得到导航角度"},{Key:" CheckNavAng",value:"检测导航角度"},{Key:" CheckNavAng",value:"检测导航角度"}]},de={parsedLogData_b:[]};let Oe=e(1),$e=e(!1),Re=e(!1),Ue=e(!1),Ze=e(!0),a=e([]);const Ye=[];let fe=e(""),O=e(""),$=e(""),ge=e(""),_e=e(""),ke=e(""),me=e(""),ye=e("");e("");let Ke=e(""),be=e(""),pe=e(""),Se=e(""),C=e(""),o=e(""),t=e(""),V=e(""),_=e(""),K=e(""),he=e(""),Ce=e(""),xe=e(""),Xe=e(!1),je=e(0),ze=e(0),D=e(""),Ee=e(""),Ie=e(""),Ne=e(""),M=e(""),k=e(""),F=e(""),R=e(""),b=e("");const We=new re;let A=e(""),T=e(""),m=e(""),Qe=e("驱动轴"),u=e(""),Je=e(""),De=e(""),Me=e(""),Ae=e(""),Te=e(""),Le=e(""),we=e(""),qe=e(""),n=e(0),l=e(0);const ea=()=>{if(l.value<a.value.length-1){const d=a.value[l.value+1];O.value=`(x=${d.realx},  y=${-d.realy}, thita=${d.realthita})`}else O.value="";switch(ge.value=`(x=${a.value[l.value].logJson.tcInfo.iDevX},y=${a.value[l.value].logJson.tcInfo.iDevY})`,_e.value=a.value[l.value].logJson.navInfo.fXDev.toFixed(4),ke.value=a.value[l.value].logJson.navInfo.fThitaDev.toFixed(4),me.value=a.value[l.value].logJson.navInfo.swVersion,ye.value=a.value[l.value].logJson.navInfo.fmVersion,a.value[l.value].logJson.nAgvState===0?D.value="加载中":a.value[l.value].logJson.nAgvState===1?D.value="空闲":a.value[l.value].logJson.nAgvState===2?D.value="手动":a.value[l.value].logJson.nAgvState===3&&(D.value="自动"),Ee.value=a.value[l.value].logJson.event.name,Ie.value=a.value[l.value].logJson.event.detail,Ne.value=a.value[l.value].logJson.event.advise,xe.value=a.value[l.value].logJson.tcInfo.sHeading,Se.value=a.value[l.value].logJson.tcInfo.sCurSpeed,o.value=a.value[l.value].logJson.tcInfo.uWorkState,o.value===1?o.value="运行":o.value===2?o.value="挂起":o.value===3?o.value="静态OP":o.value===4?o.value="充电":o.value===5?o.value="等待":o.value===6?o.value="睡眠":o.value===0?o.value="空闲":o.value===7&&(o.value="唤醒"),t.value=a.value[l.value].logJson.tcInfo.ucEventState,t.value){case 0:t.value="无故障";break;case 1:t.value=" 自旋误差超限";break;case 2:t.value="导航误差超限";break;case 3:t.value="位置校验失败";break;case 4:t.value="地标信号异常";break;case 5:t.value="磁导航通讯超时";break;case 6:t.value="惯导信息故障";break;case 7:t.value="定位模块通讯中断";break;case 30:t.value="CAN通讯超时";break;case 31:t.value="CanOpen伺服故障";break;case 32:t.value="舵碰限位";break;case 33:t.value="车轮过热";break;case 34:t.value="自制伺服故障";break;case 35:t.value="Mcu重启";break;case 36:t.value="IO检测板故障";break;case 37:t.value="机械臂网络连接断开";break;case 60:t.value="车载设备故障";break;case 61:t.value="设备车体互锁";break;case 90:t.value="伺服电源故障";break;case 91:t.value="用户紧急停车";break;case 92:t.value="硬件保险杠碰撞";break;case 93:t.value="PLS近距离急停";break;case 94:t.value="PLS中距离停车";break;case 95:t.value="PLS切区错误";break;case 96:t.value="3D相机状态错误";break;case 97:t.value="软pls状态错误";break;case 120:t.value="控制台挂起";break;case 121:t.value="网络通讯超时";break;case 122:t.value="控制台任务删除";break;case 123:t.value="禁止上线";break;case 124:t.value="AGV紧急停车";break;case 125:t.value="任务错误";break;case 150:t.value="电池电量低";break;case 151:t.value="电池电量太低";break;case 152:t.value="充电失败";break;case 153:t.value="电池系统故障";break;case 180:t.value="地图信息错误";break;case 210:t.value="用户暂停";break}if(V.value=a.value[l.value].logJson.tcInfo.usEventDetail,V.value===0&&(V.value="无故障"),he.value=a.value[l.value].logJson.tcInfo.usTaskID,Ce.value=a.value[l.value].logJson.tcInfo.usKey,K.value=a.value[l.value].logJson.tcInfo.ucTaskState,a.value[l.value].logJson.nAgvState===3?K.value===1?K.value="开始":K.value===2?K.value="运行中":K.value===3&&(K.value="结束"):K.value="无任务",C.value=a.value[l.value].logJson.tcInfo.usCargoState,C.value===0?C.value="未载货":C.value===1&&(C.value="载货"),_.value=a.value[l.value].logJson.tcInfo.usBatterState,_.value===0?_.value="无需充电":_.value===1?_.value="正常电量":_.value===2?_.value="电量低":_.value===3&&(_.value="电量极低"),Ke.value=a.value[l.value].logJson.tcInfo.uFromNode,be.value=a.value[l.value].logJson.tcInfo.uToNode,pe.value=a.value[l.value].logJson.tcInfo.sProgress,k.value=a.value[l.value].logJson.equipmentInfo.uEquipmentState,k.value===0?k.value="其他":k.value===1?k.value="开始":k.value===2?k.value="暂停":k.value===3&&(k.value="结束"),F.value=a.value[l.value].logJson.equipmentInfo.uEquipmentTaskError,F.value===0&&(F.value="无故障"),R.value=a.value[l.value].logJson.equipmentInfo.uEquipmentTaskID,R.value===0)b.value="无任务",M.value="无";else{M.value=a.value[l.value].logJson.equipmentInfo.strEquipmentTaskMessage;const x=ce.AgvEquipmentInfo.reduce((i,r)=>(i[r.Key]=r.value,i),{})[M.value]||"";M.value=x,b.value=a.value[l.value].logJson.equipmentInfo.uEquipmentTaskState,b.value===0?b.value="运行中":b.value===1?b.value="结束":b.value===-1&&(b.value="无任务")}if(A.value=a.value[l.value].logJson.electricalModule.safeCheck.bEmgStop,T.value=a.value[l.value].logJson.electricalModule.safeCheck.bHardBumper,m.value=a.value[l.value].logJson.electricalModule.safeCheck.nPlsTrig,A.value?A.value="触发":A.value="未触发",T.value?T.value="触发":T.value="未触发",m.value===0?m.value="未触发":m.value===1?m.value="近":m.value===2?m.value="中":m.value===3&&(m.value="远"),qe.value=a.value[l.value].logJson.electricalModule.kinematic.nDriveCount,a.value[l.value].logJson.electricalModule.kinematic.drive[n.value].wheel!==void 0){switch(fe.value=a.value[l.value].logJson.electricalModule.kinematic.drive[n.value].wheel.fServoSpeed.toFixed(5),u.value=a.value[l.value].logJson.electricalModule.kinematic.drive[n.value].wheel.nServoErrCode,u.value){case 0:u.value="无错误";break;case 100:u.value="Motec 系统故障/Kinco 内部错误报警";break;case 101:u.value=" Motec 驱动器启动故障/Kinco 编码器ABZ连接报警";break;case 102:u.value="Motec 参数错误/Kinco 编码器UVW连接报警";break;case 103:u.value=" Motec 欠压报警/Kinco  编码器计数报警";break;case 104:u.value="Motec 过压报警/Kinco 温度报警";break;case 105:u.value=" Motec I2T报警/Kinco 高压报警";break;case 106:u.value=" Motec 超过峰值电流/Kinco 低压报警";break;case 107:u.value=" Motec 位置误差超限/Kinco 过流报警";break;case 108:u.value="Motec 编码器故障/Kinco 吸收电阻报警";break;case 109:u.value="Motec 速度误差超限/Kinco 位置误差过大报警";break;case 110:u.value="Kinco 逻辑低压报警";break;case 111:u.value=" Kinco 电机或驱动器iit报警";break;case 112:u.value=" Kinco 脉冲频率过高报警";break;case 113:u.value="Kinco STO错误";break;case 114:u.value="Kinco 电机励磁报警";break;case 115:u.value="Motec 电机没有使能/Kinco 存储器报警";break}Je.value=a.value[l.value].logJson.electricalModule.kinematic.drive[n.value].wheel.nServoState}a.value[l.value].logJson.electricalModule.kinematic.drive[n.value].steer!==void 0&&(console.log(a.value[l.value].logJson.electricalModule.kinematic.drive[n.value].steer),De.value=a.value[l.value].logJson.electricalModule.kinematic.drive[n.value].steer.fServoPosition.toFixed(5),Me.value=a.value[l.value].logJson.electricalModule.kinematic.drive[n.value].steer.nServoState,Ae.value=a.value[l.value].logJson.electricalModule.kinematic.drive[n.value].steer.nServoErrCode,Te.value=a.value[l.value].logJson.electricalModule.kinematic.drive[n.value].steer.bPositiveLimitSwt,Le.value=a.value[l.value].logJson.electricalModule.kinematic.drive[n.value].steer.bNegativeLimitSwt,we.value=a.value[l.value].logJson.electricalModule.kinematic.drive[n.value].steer.bZeroSwt)},aa=()=>{if(l.value<a.value.length-1){const d=a.value[l.value];$.value=`(${d.realx}, ${-d.realy}, ${d.realthita})`}else $.value=""};const Pe=U("br",null,null,-1),Ve=U("div",{id:"chart-container"},null,-1),Fe={__name:"bbb_Aqw",setup(d){let x=e(""),i=0,r=null;const Z=e(""),Y=e("");let E=[];const L=e(0),w=e(100),X=()=>{i>0&&(i--,q())},j=()=>{i<E[0].StatisticsData.length-1&&(i++,q())},B=()=>{const I=ne(document.getElementById("chart-container")),f=Math.max(0,Math.min(L.value,100)),p=Math.max(0,Math.min(w.value,100)),c={dataZoom:[{show:!1,type:"slider",start:f,end:p}]};I.setOption(c)},q=()=>{r&&r.dispose();const I=document.getElementById("chart-container");r=ie(I);const f=new Date(Z.value),p=new Date(Y.value);x.value=E[0].StatisticsData[i].name,f&&p&&!isNaN(f.getTime())&&isNaN(p.getTime());let c;c=E;const y=c.map(s=>s.logDateTime),S=[];for(let s=0;s<c.length;s++){const g=c[s].StatisticsData[i].value.map(v=>v.value);for(let v=0;v<g.length;v++)S[v]||(S[v]=[]),S[v].push(g[v])}console.log("3333333333333",S);const z={xAxis:{type:"category",data:y},yAxis:{type:"value"},series:S.map((s,g)=>({type:"line",name:c[0].StatisticsData[i].value[g].name,data:s})),tooltip:{trigger:"axis",formatter:s=>{let g=`时间: ${s[0].name}<br/>`;for(let v=0;v<s.length;v++){const{seriesName:N,value:P}=s[v];g+=`${N}: ${P}<br/>`}return g}},dataZoom:[{show:!1,type:"slider"}]};r.on("dataZoom",({start:s,end:g})=>{const v=Math.round(s*(y.length-1)),N=Math.round(g*(y.length-1)),P=y.slice(v,N+1),W=S.map(G=>G.slice(v,N+1));r.setOption({xAxis:{data:P},series:S.map((G,Q)=>({data:W[Q]}))})}),r.setOption(z),r.setOption({toolbox:{feature:{saveAsImage:{name:"chartInstance",title:"保存图表",pixelRatio:2}}}})};return ee(()=>{E=de.parsedLogData_b,q()}),(I,f)=>{const p=ve,c=se;return ae(),le(oe,null,[J(p,{onClick:X},{default:H(()=>[h("＜")]),_:1}),h(" "+te(ue(x))+" ",1),J(p,{onClick:j},{default:H(()=>[h("＞")]),_:1}),h("    范围:"),J(c,{type:"number",modelValue:L.value,"onUpdate:modelValue":f[0]||(f[0]=y=>L.value=y),onInput:B,min:0,style:{width:"30%"}},null,8,["modelValue"]),h(" 一"),J(c,{type:"number",modelValue:w.value,"onUpdate:modelValue":f[1]||(f[1]=y=>w.value=y),onInput:B,max:100,style:{width:"30%"}},null,8,["modelValue"]),Pe,Ve],64)}}},la=Object.freeze(Object.defineProperty({__proto__:null,default:Fe},Symbol.toStringTag,{value:"Module"}));export{aa as $,b as A,F as B,M as C,me as D,ye as E,O as F,$ as G,ge as H,_e as I,ke as J,fe as K,T as L,A as M,Ke as N,m as O,Qe as P,Je as Q,u as R,De as S,Me as T,Ae as U,Te as V,Le as W,we as X,n as Y,qe as Z,ea as _,l as a,Fe as a0,We as a1,de as a2,la as a3,a as b,$e as c,Ye as d,Oe as e,be as f,pe as g,Se as h,Ze as i,C as j,o as k,t as l,V as m,_ as n,K as o,Ue as p,he as q,Ce as r,Re as s,xe as t,Xe as u,D as v,je as w,ze as x,k as y,R as z};
